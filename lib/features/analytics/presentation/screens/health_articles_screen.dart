import 'package:flutter/material.dart';
import 'package:nutry_flow/shared/theme/app_colors.dart';
import '../widgets/search_bar_widget.dart';
import '../widgets/article_card.dart';
import '../widgets/video_card.dart';
import '../widgets/tag_chip.dart';
import '../widgets/author_card.dart';
import '../widgets/section_header.dart';
import '../../domain/entities/insight_article.dart';
import '../../domain/entities/insight_video.dart';
import '../../domain/entities/insight_tag.dart';
import '../../domain/entities/insight_author.dart';
import 'article_detail_screen.dart';

class HealthArticlesScreen extends StatefulWidget {
  const HealthArticlesScreen({super.key});

  @override
  State<HealthArticlesScreen> createState() => _HealthArticlesScreenState();
}

class _HealthArticlesScreenState extends State<HealthArticlesScreen> {
  // –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç–∞—Ç–µ–π –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  late List<InsightArticle> _articles;
  late List<InsightVideo> _videos;
  late List<InsightTag> _tags;
  late List<InsightAuthor> _authors;
  late InsightArticle _featuredArticle;
  String _searchQuery = '';

  @override
  void initState() {
    super.initState();
    _initializeData();
  }

  void _initializeData() {
    _featuredArticle = const InsightArticle(
      id: 'featured1',
      title: '10 –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –∂–∏–∑–Ω–∏',
      description:
          '–£–∑–Ω–∞–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é –∏ –∑–¥–æ—Ä–æ–≤—å–µ –≤ —Ç–µ—á–µ–Ω–∏–µ –≤—Å–µ–≥–æ –¥–Ω—è.',
      author: '–î–æ–∫—Ç–æ—Ä –ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
      authorAvatar: 'üë©‚Äç‚öïÔ∏è',
      category: '–ü–∏—Ç–∞–Ω–∏–µ',
      readTime: '8 –º–∏–Ω',
      date: '2024-01-15',
      imageUrl: 'https://via.placeholder.com/400x200',
      isFeatured: true,
      tags: ['–ø–∏—Ç–∞–Ω–∏–µ', '–∑–¥–æ—Ä–æ–≤—å–µ', '—ç–Ω–µ—Ä–≥–∏—è'],
    );

    _articles = [
      const InsightArticle(
        id: '1',
        title: '–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –¥–æ–º–∞',
        description: '–ö–∞–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ñ–æ—Ä–º—É –±–µ–∑ –ø–æ—Å–µ—â–µ–Ω–∏—è —Å–ø–æ—Ä—Ç–∑–∞–ª–∞.',
        author: '–¢—Ä–µ–Ω–µ—Ä –ú–∏—Ö–∞–∏–ª –°–∏–¥–æ—Ä–æ–≤',
        authorAvatar: 'üí™',
        category: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
        readTime: '6 –º–∏–Ω',
        date: '2024-01-14',
        imageUrl: 'https://via.placeholder.com/300x200',
        tags: ['—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏', '–¥–æ–º', '—Ñ–∏—Ç–Ω–µ—Å'],
      ),
      const InsightArticle(
        id: '2',
        title: '–ü–æ–ª—å–∑–∞ –≤–∏—Ç–∞–º–∏–Ω–∞ D',
        description: '–í–∞–∂–Ω–æ—Å—Ç—å –≤–∏—Ç–∞–º–∏–Ω–∞ D –¥–ª—è –∏–º–º—É–Ω–∏—Ç–µ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å—è.',
        author: '–î–∏–µ—Ç–æ–ª–æ–≥ –ï–ª–µ–Ω–∞ –ö–æ–∑–ª–æ–≤–∞',
        authorAvatar: 'ü•ó',
        category: '–ó–¥–æ—Ä–æ–≤—å–µ',
        readTime: '5 –º–∏–Ω',
        date: '2024-01-13',
        imageUrl: 'https://via.placeholder.com/300x200',
        tags: ['–≤–∏—Ç–∞–º–∏–Ω—ã', '–∏–º–º—É–Ω–∏—Ç–µ—Ç'],
      ),
      const InsightArticle(
        id: '3',
        title: '–†–µ—Ü–µ–ø—Ç –ø–æ–ª–µ–∑–Ω–æ–≥–æ –∑–∞–≤—Ç—Ä–∞–∫–∞',
        description: '–ë—ã—Å—Ç—Ä—ã–π –∏ –ø–∏—Ç–∞—Ç–µ–ª—å–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫ –¥–ª—è —ç–Ω–µ—Ä–≥–∏–∏.',
        author: '–®–µ—Ñ-–ø–æ–≤–∞—Ä –ò–≥–æ—Ä—å –ú–æ—Ä–æ–∑–æ–≤',
        authorAvatar: 'üë®‚Äçüç≥',
        category: '–†–µ—Ü–µ–ø—Ç—ã',
        readTime: '4 –º–∏–Ω',
        date: '2024-01-12',
        imageUrl: 'https://via.placeholder.com/300x200',
        tags: ['–∑–∞–≤—Ç—Ä–∞–∫', '—Ä–µ—Ü–µ–ø—Ç—ã'],
      ),
      const InsightArticle(
        id: '4',
        title: '–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–∏—Ç—å –≤–æ–¥—É',
        description: '–í–∞–∂–Ω–æ—Å—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∏—Ç—å–µ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞.',
        author: '–î–∏–µ—Ç–æ–ª–æ–≥ –ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
        authorAvatar: 'üë©‚Äç‚öïÔ∏è',
        category: '–ó–¥–æ—Ä–æ–≤—å–µ',
        readTime: '3 –º–∏–Ω',
        date: '2024-01-11',
        imageUrl: 'https://via.placeholder.com/300x200',
        tags: ['–≤–æ–¥–∞', '–≥–∏–¥—Ä–∞—Ç–∞—Ü–∏—è'],
      ),
    ];

    _videos = [
      const InsightVideo(
        id: 'video1',
        title: '–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞ –∑–∞ 10 –º–∏–Ω—É—Ç',
        description: '–ë—ã—Å—Ç—Ä–∞—è –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è —É—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞.',
        author: '–¢—Ä–µ–Ω–µ—Ä –ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞',
        authorAvatar: 'üë®‚Äç‚öïÔ∏è',
        category: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
        duration: '10:30',
        date: '2024-01-10',
        thumbnailUrl: 'https://via.placeholder.com/300x200',
        videoUrl: 'https://example.com/video1.mp4',
        isRecommended: true,
        tags: ['–∑–∞—Ä—è–¥–∫–∞', '—É—Ç—Ä–æ'],
      ),
      const InsightVideo(
        id: 'video2',
        title: '–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∑–¥–æ—Ä–æ–≤–æ–≥–æ –∑–∞–≤—Ç—Ä–∞–∫–∞',
        description: '–†–µ—Ü–µ–ø—Ç—ã –±—ã—Å—Ç—Ä—ã—Ö –∏ –ø–æ–ª–µ–∑–Ω—ã—Ö –∑–∞–≤—Ç—Ä–∞–∫–æ–≤.',
        author: '–®–µ—Ñ-–ø–æ–≤–∞—Ä –ú–∏—Ö–∞–∏–ª –°–∏–¥–æ—Ä–æ–≤',
        authorAvatar: 'üë®‚Äç‚öïÔ∏è',
        category: '–†–µ—Ü–µ–ø—Ç—ã',
        duration: '8:45',
        date: '2024-01-09',
        thumbnailUrl: 'https://via.placeholder.com/300x200',
        videoUrl: 'https://example.com/video2.mp4',
        tags: ['–∑–∞–≤—Ç—Ä–∞–∫', '—Ä–µ—Ü–µ–ø—Ç—ã'],
      ),
    ];

    _tags = [
      const InsightTag(
          id: '1',
          name: '–ü–∏—Ç–∞–Ω–∏–µ',
          category: '–ü–∏—Ç–∞–Ω–∏–µ',
          color: '#4CAF50',
          articleCount: 15),
      const InsightTag(
          id: '2',
          name: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
          category: '–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
          color: '#2196F3',
          articleCount: 12),
      const InsightTag(
          id: '3',
          name: '–ó–¥–æ—Ä–æ–≤—å–µ',
          category: '–ó–¥–æ—Ä–æ–≤—å–µ',
          color: '#FF9800',
          articleCount: 8),
      const InsightTag(
          id: '4',
          name: '–†–µ—Ü–µ–ø—Ç—ã',
          category: '–†–µ—Ü–µ–ø—Ç—ã',
          color: '#9C27B0',
          articleCount: 20),
      const InsightTag(
          id: '5',
          name: '–í–∏—Ç–∞–º–∏–Ω—ã',
          category: '–ó–¥–æ—Ä–æ–≤—å–µ',
          color: '#F44336',
          articleCount: 6),
      const InsightTag(
          id: '6',
          name: '–ú–æ—Ç–∏–≤–∞—Ü–∏—è',
          category: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è',
          color: '#009688',
          articleCount: 10),
    ];

    _authors = [
      const InsightAuthor(
        id: '1',
        name: '–î–æ–∫—Ç–æ—Ä –ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
        title: '–î–∏–µ—Ç–æ–ª–æ–≥',
        avatar: 'üë©‚Äç‚öïÔ∏è',
        bio: '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –∑–¥–æ—Ä–æ–≤–æ–º—É –ø–∏—Ç–∞–Ω–∏—é —Å 10-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º',
        articlesCount: 25,
        followersCount: 1200,
        isVerified: true,
      ),
      const InsightAuthor(
        id: '2',
        name: '–¢—Ä–µ–Ω–µ—Ä –ú–∏—Ö–∞–∏–ª –°–∏–¥–æ—Ä–æ–≤',
        title: '–§–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–Ω–µ—Ä',
        avatar: 'üí™',
        bio: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä –∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É —Ç—Ä–µ–Ω–∏–Ω–≥—É',
        articlesCount: 18,
        followersCount: 890,
        isVerified: true,
      ),
      const InsightAuthor(
        id: '3',
        name: '–î–∏–µ—Ç–æ–ª–æ–≥ –ï–ª–µ–Ω–∞ –ö–æ–∑–ª–æ–≤–∞',
        title: '–ù—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥',
        avatar: 'ü•ó',
        bio: '–≠–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–º—É –ø–∏—Ç–∞–Ω–∏—é –∏ –¥–∏–µ—Ç–æ–ª–æ–≥–∏–∏',
        articlesCount: 22,
        followersCount: 1100,
        isVerified: false,
      ),
    ];
  }

  List<InsightArticle> get _filteredArticles {
    if (_searchQuery.isEmpty) return _articles;
    return _articles
        .where((article) =>
            article.title.toLowerCase().contains(_searchQuery.toLowerCase()) ||
            article.description
                .toLowerCase()
                .contains(_searchQuery.toLowerCase()) ||
            article.author.toLowerCase().contains(_searchQuery.toLowerCase()) ||
            article.category
                .toLowerCase()
                .contains(_searchQuery.toLowerCase()) ||
            article.tags.any((tag) =>
                tag.toLowerCase().contains(_searchQuery.toLowerCase())))
        .toList();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: AppColors.dynamicBackground,
      appBar: AppBar(
        backgroundColor: AppColors.dynamicSurface,
        elevation: 0,
        leading: IconButton(
          icon: Icon(Icons.arrow_back, color: AppColors.dynamicTextPrimary),
          onPressed: () => Navigator.of(context).pop(),
        ),
        title: Text(
          '–°—Ç–∞—Ç—å–∏ –æ –∑–¥–æ—Ä–æ–≤—å–µ',
          style: TextStyle(
            color: AppColors.dynamicTextPrimary,
            fontSize: 20,
            fontWeight: FontWeight.w600,
          ),
        ),
        actions: [
          IconButton(
            icon: Icon(Icons.bookmark_border,
                color: AppColors.dynamicTextPrimary),
            onPressed: () {
              // TODO: Show bookmarks
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // –ü–æ–∏—Å–∫
            _buildSearchSection(),
            const SizedBox(height: 24),

            // –ì–ª–∞–≤–Ω–∞—è —Å—Ç–∞—Ç—å—è
            _buildFeaturedArticle(),
            const SizedBox(height: 24),

            // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Å—Ç–∞—Ç—å–∏
            _buildRecommendedArticles(),
            const SizedBox(height: 24),

            // –í–∏–¥–µ–æ-–∫–æ–Ω—Ç–µ–Ω—Ç
            _buildRecommendedVideos(),
            const SizedBox(height: 24),

            // –¢—Ä–µ–Ω–¥–æ–≤—ã–µ —Ç–µ–≥–∏
            _buildTrendingTags(),
            const SizedBox(height: 24),

            // –¢–æ–ø –∞–≤—Ç–æ—Ä—ã
            _buildTopAuthors(),
            const SizedBox(height: 32),
          ],
        ),
      ),
    );
  }

  Widget _buildSearchSection() {
    return SearchBarWidget(
      onSearchChanged: (query) {
        setState(() {
          _searchQuery = query;
        });
      },
      onClear: () {
        setState(() {
          _searchQuery = '';
        });
      },
    );
  }

  Widget _buildFeaturedArticle() {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Text(
          '–ì–ª–∞–≤–Ω–∞—è —Å—Ç–∞—Ç—å—è',
          style: TextStyle(
            fontSize: 20,
            fontWeight: FontWeight.bold,
            color: AppColors.dynamicTextPrimary,
          ),
        ),
        const SizedBox(height: 12),
        GestureDetector(
          onTap: () {
            Navigator.push(
              context,
              MaterialPageRoute(
                builder: (context) =>
                    ArticleDetailScreen(article: _featuredArticle),
              ),
            );
          },
          child: ArticleCard(article: _featuredArticle, isLarge: true),
        ),
      ],
    );
  }

  Widget _buildRecommendedArticles() {
    final articles = _filteredArticles.take(3).toList();

    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        SectionHeader(
          title: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ —Å—Ç–∞—Ç—å–∏',
          onViewAll: () {
            // TODO: Navigate to all articles
            ScaffoldMessenger.of(context).showSnackBar(
              const SnackBar(content: Text('–ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤—Å–µ–º —Å—Ç–∞—Ç—å—è–º')),
            );
          },
        ),
        const SizedBox(height: 12),
        if (articles.isEmpty)
          Center(
            child: Padding(
              padding: const EdgeInsets.all(32),
              child: Text(
                '–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',
                style: TextStyle(
                  fontSize: 16,
                  color: Colors.grey.shade400,
                ),
              ),
            ),
          )
        else
          ...articles.map((article) => Padding(
                padding: const EdgeInsets.only(bottom: 12),
                child: GestureDetector(
                  onTap: () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) =>
                            ArticleDetailScreen(article: article),
                      ),
                    );
                  },
                  child: ArticleCard(article: article),
                ),
              )),
      ],
    );
  }

  Widget _buildRecommendedVideos() {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        SectionHeader(
          title: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –≤–∏–¥–µ–æ',
          onViewAll: () {
            ScaffoldMessenger.of(context).showSnackBar(
              const SnackBar(content: Text('–ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤—Å–µ–º –≤–∏–¥–µ–æ')),
            );
          },
        ),
        const SizedBox(height: 12),
        ..._videos.map((video) => Padding(
              padding: const EdgeInsets.only(bottom: 12),
              child: GestureDetector(
                onTap: () {
                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(
                        content: Text('–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–∏–¥–µ–æ: ${video.title}')),
                  );
                },
                child: VideoCard(video: video),
              ),
            )),
      ],
    );
  }

  Widget _buildTrendingTags() {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        SectionHeader(
          title: '–¢—Ä–µ–Ω–¥–æ–≤—ã–µ —Ç–µ–≥–∏',
          onViewAll: () {
            ScaffoldMessenger.of(context).showSnackBar(
              const SnackBar(content: Text('–ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤—Å–µ–º —Ç–µ–≥–∞–º')),
            );
          },
        ),
        const SizedBox(height: 12),
        Wrap(
          spacing: 8,
          runSpacing: 8,
          children: _tags
              .map((tag) => GestureDetector(
                    onTap: () {
                      setState(() {
                        _searchQuery = tag.name;
                      });
                    },
                    child: TagChip(tag: tag),
                  ))
              .toList(),
        ),
      ],
    );
  }

  Widget _buildTopAuthors() {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        SectionHeader(
          title: '–¢–æ–ø –∞–≤—Ç–æ—Ä—ã',
          onViewAll: () {
            ScaffoldMessenger.of(context).showSnackBar(
              const SnackBar(content: Text('–ü–µ—Ä–µ—Ö–æ–¥ –∫ –≤—Å–µ–º –∞–≤—Ç–æ—Ä–∞–º')),
            );
          },
        ),
        const SizedBox(height: 12),
        ..._authors.map((author) => Padding(
              padding: const EdgeInsets.only(bottom: 12),
              child: GestureDetector(
                onTap: () {
                  ScaffoldMessenger.of(context).showSnackBar(
                    SnackBar(content: Text('–ü—Ä–æ—Ñ–∏–ª—å –∞–≤—Ç–æ—Ä–∞: ${author.name}')),
                  );
                },
                child: AuthorCard(author: author),
              ),
            )),
      ],
    );
  }
}
