import '../data/services/supabase_service.dart';
import '../data/services/local_storage_service.dart';
import '../data/repositories/user_goals_repository_impl.dart';
import '../data/repositories/mock_user_goals_repository.dart';
import '../data/repositories/auth_repository_impl.dart';
import '../data/repositories/mock_auth_repository.dart';
import '../domain/repositories/user_goals_repository.dart';
import '../domain/repositories/auth_repository.dart';
import '../domain/usecases/save_user_goals_usecase.dart';
import '../domain/usecases/get_user_goals_usecase.dart';
import '../domain/usecases/sign_up_usecase.dart';
import '../domain/usecases/sign_in_usecase.dart';
import '../presentation/bloc/goals_setup_bloc.dart';
import '../presentation/bloc/auth_bloc.dart';
import '../../../config/supabase_config.dart';

/// –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è onboarding —Ñ–∏—á–∏
/// –†–µ–∞–ª–∏–∑—É–µ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω Dependency Injection –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è —Å–ª–æ–µ–≤ Clean Architecture
class OnboardingDependencies {
  static OnboardingDependencies? _instance;

  // –°–µ—Ä–≤–∏—Å—ã
  late final SupabaseService _supabaseService;
  late final LocalStorageService _localStorageService;

  // –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
  late final UserGoalsRepository _userGoalsRepository;
  late final AuthRepository _authRepository;

  // Use Cases
  late final SaveUserGoalsUseCase _saveUserGoalsUseCase;
  late final GetUserGoalsUseCase _getUserGoalsUseCase;
  late final SignUpUseCase _signUpUseCase;
  late final SignInUseCase _signInUseCase;

  OnboardingDependencies._();

  /// –ü–æ–ª—É—á–∞–µ—Ç singleton —ç–∫–∑–µ–º–ø–ª—è—Ä
  static OnboardingDependencies get instance {
    _instance ??= OnboardingDependencies._();
    return _instance!;
  }

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
  Future<void> initialize() async {
    print('üîµ OnboardingDependencies: initialize called');
    print(
        'üîµ OnboardingDependencies: SupabaseConfig.isDemo = ${SupabaseConfig.isDemo}');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
    _supabaseService = SupabaseService.instance;
    _localStorageService = await LocalStorageService.create();

    // –í—ã–±–∏—Ä–∞–µ–º —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

    if (SupabaseConfig.isDemo) {
      print('üîµ OnboardingDependencies: Using demo mode - MockAuthRepository');
      _userGoalsRepository = MockUserGoalsRepository();

      _authRepository = MockAuthRepository();
      // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      MockAuthRepository.createTestUser();
    } else {
      print(
          'üîµ OnboardingDependencies: Using production mode - AuthRepositoryImpl');
      _userGoalsRepository = UserGoalsRepositoryImpl(
        _supabaseService,
        _localStorageService,
      );

      _authRepository = AuthRepositoryImpl(_supabaseService);
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Use Cases
    _saveUserGoalsUseCase = SaveUserGoalsUseCase(
      _userGoalsRepository,
      _authRepository,
    );

    _getUserGoalsUseCase = GetUserGoalsUseCase(
      _userGoalsRepository,
      _authRepository,
    );

    _signUpUseCase = SignUpUseCase(_authRepository);
    _signInUseCase = SignInUseCase(_authRepository);
  }

  /// –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä GoalsSetupBloc —Å –∏–Ω–∂–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
  GoalsSetupBloc createGoalsSetupBloc() {
    return GoalsSetupBloc(
      _saveUserGoalsUseCase,
      _getUserGoalsUseCase,
    );
  }

  /// –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä AuthBloc —Å –∏–Ω–∂–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
  AuthBloc createAuthBloc() {
    print('üîµ OnboardingDependencies: createAuthBloc called');
    print(
        'üîµ OnboardingDependencies: _authRepository type = ${_authRepository.runtimeType}');
    print(
        'üîµ OnboardingDependencies: _signUpUseCase type = ${_signUpUseCase.runtimeType}');

    return AuthBloc(
      authRepository: _authRepository,
      signUpUseCase: _signUpUseCase,
      signInUseCase: _signInUseCase,
    );
  }

  // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)

  SupabaseService get supabaseService => _supabaseService;
  LocalStorageService get localStorageService => _localStorageService;
  UserGoalsRepository get userGoalsRepository => _userGoalsRepository;
  AuthRepository get authRepository => _authRepository;
  SaveUserGoalsUseCase get saveUserGoalsUseCase => _saveUserGoalsUseCase;
  GetUserGoalsUseCase get getUserGoalsUseCase => _getUserGoalsUseCase;
  SignUpUseCase get signUpUseCase => _signUpUseCase;
  SignInUseCase get signInUseCase => _signInUseCase;

  /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ –¥–µ–º–æ-—Ä–µ–∂–∏–º
  bool get isDemo => SupabaseConfig.isDemo;

  /// –û—á–∏—â–∞–µ—Ç singleton –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  static void reset() {
    _instance = null;
  }
}
