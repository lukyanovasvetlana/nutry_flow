import 'dart:io';
import 'dart:developer' as developer;
import '../models/menu_item.dart';
import '../models/ingredient.dart';
import '../models/recipe_step.dart';
import '../models/recipe_photo.dart';
import '../models/nutrition_facts.dart';
import '../models/nutrition_info.dart';

/// –ú–æ–∫-–≤–µ—Ä—Å–∏—è RecipeService –¥–ª—è –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞
/// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–º–µ—Å—Ç–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ Supabase
class MockRecipeService {
  static final List<MenuItem> _mockRecipes = [
    MenuItem(
      id: '1',
      title: '–û–≤—Å—è–Ω–∞—è –∫–∞—à–∞ —Å —è–≥–æ–¥–∞–º–∏',
      description: '–ü–æ–ª–µ–∑–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫ —Å –æ–≤—Å—è–Ω–∫–æ–π –∏ —Å–≤–µ–∂–∏–º–∏ —è–≥–æ–¥–∞–º–∏',
      category: '–ó–∞–≤—Ç—Ä–∞–∫',
      difficulty: '–õ–µ–≥–∫–æ',
      rating: 4.5,
      photos: [
        RecipePhoto(
          id: '1',
          recipeId: '1',
          url:
              'https://images.unsplash.com/photo-1517686469429-8bdb88b9f907?w=400',
          order: 1,
          createdAt: DateTime(2023, 1, 1),
          updatedAt: DateTime(2023, 1, 1),
        ),
      ],
      ingredients: [
        Ingredient(
          name: '–û–≤—Å—è–Ω—ã–µ —Ö–ª–æ–ø—å—è',
          amount: 50,
          unit: '–≥',
          nutritionPer100g: NutritionInfo(
            calories: 389,
            protein: 16.9,
            fat: 6.9,
            carbs: 66.3,
          ),
        ),
        Ingredient(
          name: '–ú–æ–ª–æ–∫–æ',
          amount: 200,
          unit: '–º–ª',
          nutritionPer100g: NutritionInfo(
            calories: 64,
            protein: 3.2,
            fat: 3.6,
            carbs: 4.8,
          ),
        ),
        Ingredient(
          name: '–Ø–≥–æ–¥—ã –º–∏–∫—Å',
          amount: 100,
          unit: '–≥',
          nutritionPer100g: NutritionInfo(
            calories: 43,
            protein: 1.4,
            fat: 0.3,
            carbs: 9.6,
          ),
        ),
      ],
      steps: [
        RecipeStep(
          id: 'step1',
          order: 1,
          description: '–ó–∞–ª–∏—Ç—å –æ–≤—Å—è–Ω—ã–µ —Ö–ª–æ–ø—å—è –º–æ–ª–æ–∫–æ–º –∏ –¥–æ–≤–µ—Å—Ç–∏ –¥–æ –∫–∏–ø–µ–Ω–∏—è',
          createdAt: DateTime(2023, 1, 1),
          updatedAt: DateTime(2023, 1, 1),
        ),
        RecipeStep(
          id: 'step2',
          order: 2,
          description: '–í–∞—Ä–∏—Ç—å 5-7 –º–∏–Ω—É—Ç –Ω–∞ –º–µ–¥–ª–µ–Ω–Ω–æ–º –æ–≥–Ω–µ, –ø–æ–º–µ—à–∏–≤–∞—è',
          createdAt: DateTime(2023, 1, 1),
          updatedAt: DateTime(2023, 1, 1),
        ),
        RecipeStep(
          id: 'step3',
          order: 3,
          description: '–î–æ–±–∞–≤–∏—Ç—å —è–≥–æ–¥—ã –∏ –ø–æ–¥–∞–≤–∞—Ç—å –≥–æ—Ä—è—á–∏–º',
          createdAt: DateTime(2023, 1, 1),
          updatedAt: DateTime(2023, 1, 1),
        ),
      ],
      nutrition: NutritionFacts(
        calories: 350,
        protein: 12,
        fat: 8,
        carbs: 45,
        fiber: 6,
        sodium: 50,
        cholesterol: 15,
        sugar: 12,
        vitaminC: 25,
      ),
    ),
    MenuItem(
      id: '2',
      title: '–ì—Ä–µ—á–µ—Å–∫–∏–π —Å–∞–ª–∞—Ç',
      description: '–°–≤–µ–∂–∏–π —Å–∞–ª–∞—Ç —Å –æ–ª–∏–≤–∫–∞–º–∏, —Å—ã—Ä–æ–º —Ñ–µ—Ç–∞ –∏ –ø–æ–º–∏–¥–æ—Ä–∞–º–∏',
      category: '–°–∞–ª–∞—Ç',
      difficulty: '–õ–µ–≥–∫–æ',
      rating: 4.8,
      photos: [
        RecipePhoto(
          id: '2',
          recipeId: '2',
          url:
              'https://images.unsplash.com/photo-1540420773420-3366772f4999?w=400',
          order: 1,
          createdAt: DateTime(2023, 1, 2),
          updatedAt: DateTime(2023, 1, 2),
        ),
      ],
      ingredients: [
        Ingredient(
          name: '–ü–æ–º–∏–¥–æ—Ä—ã',
          amount: 300,
          unit: '–≥',
          nutritionPer100g: NutritionInfo(
            calories: 18,
            protein: 0.9,
            fat: 0.2,
            carbs: 3.9,
          ),
        ),
        Ingredient(
          name: '–û–≥—É—Ä—Ü—ã',
          amount: 200,
          unit: '–≥',
          nutritionPer100g: NutritionInfo(
            calories: 16,
            protein: 0.7,
            fat: 0.1,
            carbs: 2.8,
          ),
        ),
        Ingredient(
          name: '–°—ã—Ä —Ñ–µ—Ç–∞',
          amount: 100,
          unit: '–≥',
          nutritionPer100g: NutritionInfo(
            calories: 264,
            protein: 14.2,
            fat: 21.3,
            carbs: 4.1,
          ),
        ),
      ],
      steps: [
        RecipeStep(
          id: 'step4',
          order: 1,
          description: '–ù–∞—Ä–µ–∑–∞—Ç—å –ø–æ–º–∏–¥–æ—Ä—ã –∏ –æ–≥—É—Ä—Ü—ã –∫—Ä—É–ø–Ω—ã–º–∏ –∫—É—Å–æ—á–∫–∞–º–∏',
          createdAt: DateTime(2023, 1, 2),
          updatedAt: DateTime(2023, 1, 2),
        ),
        RecipeStep(
          id: 'step5',
          order: 2,
          description: '–î–æ–±–∞–≤–∏—Ç—å –∫—É–±–∏–∫–∏ —Å—ã—Ä–∞ —Ñ–µ—Ç–∞ –∏ –æ–ª–∏–≤–∫–∏',
          createdAt: DateTime(2023, 1, 2),
          updatedAt: DateTime(2023, 1, 2),
        ),
        RecipeStep(
          id: 'step6',
          order: 3,
          description: '–ó–∞–ø—Ä–∞–≤–∏—Ç—å –æ–ª–∏–≤–∫–æ–≤—ã–º –º–∞—Å–ª–æ–º –∏ –ª–∏–º–æ–Ω–Ω—ã–º —Å–æ–∫–æ–º',
          createdAt: DateTime(2023, 1, 2),
          updatedAt: DateTime(2023, 1, 2),
        ),
      ],
      nutrition: NutritionFacts(
        calories: 280,
        protein: 15,
        fat: 22,
        carbs: 8,
        fiber: 4,
        sodium: 800,
        cholesterol: 45,
        sugar: 6,
        vitaminC: 40,
      ),
    ),
    MenuItem(
      id: '3',
      title: '–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ —Å –æ–≤–æ—â–∞–º–∏',
      description: '–ó–∞–ø–µ—á–µ–Ω–Ω–∞—è –∫—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ —Å —Å–µ–∑–æ–Ω–Ω—ã–º–∏ –æ–≤–æ—â–∞–º–∏',
      category: '–û—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ',
      difficulty: '–°—Ä–µ–¥–Ω–µ',
      rating: 4.6,
      photos: [
        RecipePhoto(
          id: '3',
          recipeId: '3',
          url:
              'https://images.unsplash.com/photo-1532550907401-a500c9a57435?w=400',
          order: 1,
          createdAt: DateTime(2023, 1, 3),
          updatedAt: DateTime(2023, 1, 3),
        ),
      ],
      ingredients: [
        Ingredient(
          name: '–ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞',
          amount: 400,
          unit: '–≥',
          nutritionPer100g: NutritionInfo(
            calories: 165,
            protein: 31,
            fat: 3.6,
            carbs: 0,
          ),
        ),
        Ingredient(
          name: '–ë—Ä–æ–∫–∫–æ–ª–∏',
          amount: 200,
          unit: '–≥',
          nutritionPer100g: NutritionInfo(
            calories: 34,
            protein: 2.8,
            fat: 0.4,
            carbs: 6.6,
          ),
        ),
        Ingredient(
          name: '–ú–æ—Ä–∫–æ–≤—å',
          amount: 150,
          unit: '–≥',
          nutritionPer100g: NutritionInfo(
            calories: 41,
            protein: 0.9,
            fat: 0.2,
            carbs: 9.6,
          ),
        ),
      ],
      steps: [
        RecipeStep(
          id: 'step7',
          order: 1,
          description: '–†–∞–∑–æ–≥—Ä–µ—Ç—å –¥—É—Ö–æ–≤–∫—É –¥–æ 200¬∞C',
          createdAt: DateTime(2023, 1, 3),
          updatedAt: DateTime(2023, 1, 3),
        ),
        RecipeStep(
          id: 'step8',
          order: 2,
          description: '–ü—Ä–∏–ø—Ä–∞–≤–∏—Ç—å –∫—É—Ä–∏–Ω—É—é –≥—Ä—É–¥–∫—É —Å–æ–ª—å—é –∏ —Å–ø–µ—Ü–∏—è–º–∏',
          createdAt: DateTime(2023, 1, 3),
          updatedAt: DateTime(2023, 1, 3),
        ),
        RecipeStep(
          id: 'step9',
          order: 3,
          description: '–í—ã–ª–æ–∂–∏—Ç—å –∫—É—Ä–∏—Ü—É –∏ –æ–≤–æ—â–∏ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–µ–Ω—å',
          createdAt: DateTime(2023, 1, 3),
          updatedAt: DateTime(2023, 1, 3),
        ),
        RecipeStep(
          id: 'step10',
          order: 4,
          description: '–ó–∞–ø–µ–∫–∞—Ç—å 25-30 –º–∏–Ω—É—Ç –¥–æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏',
          createdAt: DateTime(2023, 1, 3),
          updatedAt: DateTime(2023, 1, 3),
        ),
      ],
      nutrition: NutritionFacts(
        calories: 520,
        protein: 65,
        fat: 18,
        carbs: 25,
        fiber: 8,
        sodium: 200,
        cholesterol: 180,
        sugar: 15,
        vitaminC: 80,
      ),
    ),
  ];

  Future<List<MenuItem>> getAllRecipes() async {
    developer.log('üçΩÔ∏è MockRecipeService: getAllRecipes called',
        name: 'MockRecipeService');

    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å–µ—Ç–∏
    await Future.delayed(const Duration(milliseconds: 1000));

    developer.log(
        'üçΩÔ∏è MockRecipeService: Returning ${_mockRecipes.length} mock recipes',
        name: 'MockRecipeService');
    return List.from(_mockRecipes);
  }

  Future<void> saveRecipe(MenuItem recipe, List<File> photos) async {
    developer.log('üçΩÔ∏è MockRecipeService: saveRecipe called - ${recipe.title}',
        name: 'MockRecipeService');

    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å–µ—Ç–∏
    await Future.delayed(const Duration(milliseconds: 1500));

    // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Ü–µ–ø—Ç –≤ –º–æ–∫-—Å–ø–∏—Å–æ–∫
    _mockRecipes.add(recipe);

    developer.log('üçΩÔ∏è MockRecipeService: Recipe saved successfully',
        name: 'MockRecipeService');
  }

  Future<void> updateRecipe(MenuItem recipe,
      {List<File>? newPhotos, List<String>? photosToDelete}) async {
    developer.log(
        'üçΩÔ∏è MockRecipeService: updateRecipe called - ${recipe.title}',
        name: 'MockRecipeService');

    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å–µ—Ç–∏
    await Future.delayed(const Duration(milliseconds: 1200));

    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ—Ü–µ–ø—Ç –≤ –º–æ–∫-—Å–ø–∏—Å–∫–µ
    final index = _mockRecipes.indexWhere((r) => r.id == recipe.id);
    if (index != -1) {
      _mockRecipes[index] = recipe;
      developer.log('üçΩÔ∏è MockRecipeService: Recipe updated successfully',
          name: 'MockRecipeService');
    } else {
      developer.log('üçΩÔ∏è MockRecipeService: Recipe not found for update',
          name: 'MockRecipeService');
    }
  }

  Future<void> deleteRecipe(String recipeId) async {
    developer.log('üçΩÔ∏è MockRecipeService: deleteRecipe called - $recipeId',
        name: 'MockRecipeService');

    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å–µ—Ç–∏
    await Future.delayed(const Duration(milliseconds: 800));

    // –£–¥–∞–ª—è–µ–º —Ä–µ—Ü–µ–ø—Ç –∏–∑ –º–æ–∫-—Å–ø–∏—Å–∫–∞
    final initialLength = _mockRecipes.length;
    _mockRecipes.removeWhere((r) => r.id == recipeId);
    final removed = initialLength - _mockRecipes.length;

    if (removed > 0) {
      developer.log('üçΩÔ∏è MockRecipeService: Recipe deleted successfully',
          name: 'MockRecipeService');
    } else {
      developer.log('üçΩÔ∏è MockRecipeService: Recipe not found for deletion',
          name: 'MockRecipeService');
    }
  }

  /// –û—á–∏—â–∞–µ—Ç –≤—Å–µ –º–æ–∫-—Ä–µ—Ü–µ–ø—Ç—ã (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
  static void clearAll() {
    _mockRecipes.clear();
  }

  /// –ü–æ–ª—É—á–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–∫-—Ä–µ—Ü–µ–ø—Ç–æ–≤ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
  static int getRecipesCount() {
    return _mockRecipes.length;
  }
}
