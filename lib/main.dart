import 'package:flutter/material.dart';
import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:nutry_flow/core/architecture/architecture.dart';
import 'package:nutry_flow/config/supabase_config.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
  try {
    await dotenv.load(fileName: '.env');
  } catch (e) {
    print('‚ö†Ô∏è .env file not found, using demo mode');
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–º–æ-—Ä–µ–∂–∏–º
  print('üîµ Main: SupabaseConfig.isDemo = ${SupabaseConfig.isDemo}');
  print('üîµ Main: SupabaseConfig.url = ${SupabaseConfig.url}');
  print('üîµ Main: SupabaseConfig.anonKey = ${SupabaseConfig.anonKey}');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–µ–º–æ-—Ä–µ–∂–∏–º –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
  if (SupabaseConfig.isDemo) {
    print('üîµ Main: ‚úÖ Demo mode is ACTIVE');
  } else {
    print('üîµ Main: ‚ùå Demo mode is NOT active');
  }

  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    print('üèóÔ∏è Main: Initializing AppArchitecture...');
    await AppArchitecture().initialize();
    print('‚úÖ Main: AppArchitecture initialized successfully');

    // –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    runApp(AppArchitecture().createApp());
    
  } catch (e, stackTrace) {
    print('‚ùå Main: Failed to initialize AppArchitecture: $e');
    print('‚ùå Stack trace: $stackTrace');
    
    // Fallback: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –æ—à–∏–±–∫–∏
    runApp(const _ErrorApp());
  }
}

/// Fallback –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å–ª—É—á–∞–µ–≤ –æ—à–∏–±–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
class _ErrorApp extends StatelessWidget {
  const _ErrorApp();

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'NutryFlow - Error',
      theme: ThemeData.light(),
      home: Scaffold(
        appBar: AppBar(
          title: const Text('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏'),
          backgroundColor: Colors.red,
          foregroundColor: Colors.white,
        ),
        body: const Center(
          child: Padding(
            padding: EdgeInsets.all(24.0),
            child: Column(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Icon(
                  Icons.error_outline,
                  size: 80,
                  color: Colors.red,
                ),
                SizedBox(height: 24),
                Text(
                  '–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                  style: TextStyle(
                    fontSize: 20,
                    fontWeight: FontWeight.bold,
                  ),
                  textAlign: TextAlign.center,
                ),
                SizedBox(height: 16),
                Text(
                  '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.',
                  style: TextStyle(fontSize: 16),
                  textAlign: TextAlign.center,
                ),
              ],
            ),
          ),
        ),
      ),
      debugShowCheckedModeBanner: false,
    );
  }
}
