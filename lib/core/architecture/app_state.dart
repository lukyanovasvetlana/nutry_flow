import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:provider/provider.dart';
import 'package:nutry_flow/features/onboarding/presentation/bloc/goals_setup_bloc.dart';
import 'package:nutry_flow/features/onboarding/di/onboarding_dependencies.dart';
import 'package:nutry_flow/shared/theme/theme_manager.dart';

/// –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
class AppState {
  bool _isInitialized = false;
  final List<ChangeNotifierProvider> _globalProviders = [];
  final List<BlocProvider> _globalBlocProviders = [];
  final Map<String, dynamic> _globalState = {};

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  bool get isInitialized => _isInitialized;

  /// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
  List<ChangeNotifierProvider> get globalProviders => List.unmodifiable(_globalProviders);
  
  /// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ BLoC –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
  List<BlocProvider> get globalBlocProviders => List.unmodifiable(_globalBlocProviders);

  /// –ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  Map<String, dynamic> get globalState => Map.unmodifiable(_globalState);

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  Future<void> initialize() async {
    if (_isInitialized) {
      print('‚ö†Ô∏è AppState: Already initialized');
      return;
    }

    try {
      print('üìä AppState: Initializing application state...');
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö BLoC –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
      await _initializeGlobalProviders();
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
      await _initializeGlobalState();
      
      _isInitialized = true;
      print('‚úÖ AppState: Application state initialized successfully');
      
    } catch (e, stackTrace) {
      print('‚ùå AppState: Initialization failed: $e');
      print('‚ùå Stack trace: $stackTrace');
      rethrow;
    }
  }

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
  Future<void> _initializeGlobalProviders() async {
    print('üìä AppState: Initializing global providers...');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω—ã –≤–æ –≤—Å–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
    
    // Theme Manager –∫–∞–∫ ChangeNotifier
    _globalProviders.add(
      ChangeNotifierProvider<ThemeManager>(
        create: (context) => ThemeManager(),
      ),
    );
    
    // Goals Setup BLoC (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ)
    _globalBlocProviders.add(
      BlocProvider<GoalsSetupBloc>(
        create: (context) {
          final bloc = OnboardingDependencies.instance.createGoalsSetupBloc();
          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ü–µ–ª–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ BLoC
          bloc.add(InitializeGoals());
          return bloc;
        },
      ),
    );
    
    print('üìä AppState: Global providers initialized successfully');
  }

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  Future<void> _initializeGlobalState() async {
    print('üìä AppState: Initializing global state...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
    _globalState['appVersion'] = '1.0.0';
    _globalState['buildNumber'] = '1';
    _globalState['isFirstLaunch'] = true;
    _globalState['lastLaunchDate'] = DateTime.now().toIso8601String();
    _globalState['userPreferences'] = <String, dynamic>{};
    _globalState['appSettings'] = <String, dynamic>{};
    
    print('üìä AppState: Global state initialized successfully');
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  T? getValue<T>(String key) {
    if (!_isInitialized) {
      print('‚ö†Ô∏è AppState: Not initialized');
      return null;
    }
    
    final value = _globalState[key];
    if (value is T) {
      return value;
    }
    return null;
  }

  /// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  void setValue<T>(String key, T value) {
    if (!_isInitialized) {
      print('‚ö†Ô∏è AppState: Not initialized');
      return;
    }
    
    _globalState[key] = value;
    print('üìä AppState: Set value for key "$key": $value');
  }

  /// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
  void updateValue<T>(String key, T Function(T current) updater) {
    if (!_isInitialized) {
      print('‚ö†Ô∏è AppState: Not initialized');
      return;
    }
    
    final currentValue = _globalState[key];
    if (currentValue != null) {
      final newValue = updater(currentValue as T);
      _globalState[key] = newValue;
      print('üìä AppState: Updated value for key "$key": $newValue');
    }
  }

  /// –£–¥–∞–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  void removeValue(String key) {
    if (!_isInitialized) {
      print('‚ö†Ô∏è AppState: Not initialized');
      return;
    }
    
    if (_globalState.containsKey(key)) {
      final removedValue = _globalState.remove(key);
      print('üìä AppState: Removed value for key "$key": $removedValue');
    }
  }

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∫–ª—é—á–∞ –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
  bool hasKey(String key) {
    if (!_isInitialized) {
      return false;
    }
    
    return _globalState.containsKey(key);
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–ª—é—á–µ–π –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  List<String> get allKeys {
    if (!_isInitialized) {
      return [];
    }
    
    return _globalState.keys.toList();
  }

  /// –û—á–∏—Å—Ç–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  void clearState() {
    if (!_isInitialized) {
      return;
    }
    
    _globalState.clear();
    print('üìä AppState: Global state cleared');
  }

  /// –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫ –Ω–∞—á–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º
  Future<void> resetState() async {
    if (!_isInitialized) {
      return;
    }
    
    print('üìä AppState: Resetting state to initial values...');
    await _initializeGlobalState();
    print('üìä AppState: State reset successfully');
  }

  /// –≠–∫—Å–ø–æ—Ä—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ JSON
  Map<String, dynamic> exportState() {
    if (!_isInitialized) {
      return {};
    }
    
    return Map.from(_globalState);
  }

  /// –ò–º–ø–æ—Ä—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–∑ JSON
  void importState(Map<String, dynamic> state) {
    if (!_isInitialized) {
      print('‚ö†Ô∏è AppState: Not initialized');
      return;
    }
    
    _globalState.clear();
    _globalState.addAll(state);
    print('üìä AppState: State imported successfully');
  }

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è
  Map<String, dynamic> getStateStatistics() {
    if (!_isInitialized) {
      return {};
    }
    
    return {
      'totalKeys': _globalState.length,
      'keys': _globalState.keys.toList(),
      'providersCount': _globalProviders.length,
      'isInitialized': _isInitialized,
      'lastUpdate': DateTime.now().toIso8601String(),
    };
  }

  /// –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
  Future<void> dispose() async {
    if (!_isInitialized) return;
    
    print('üßπ AppState: Disposing...');
    
    // –û—á–∏—â–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    _globalState.clear();
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã
    _globalProviders.clear();
    
    _isInitialized = false;
    
    print('‚úÖ AppState: Disposed successfully');
  }

  /// –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
  Future<void> reinitialize() async {
    print('üîÑ AppState: Reinitializing...');
    await dispose();
    await initialize();
  }
}
