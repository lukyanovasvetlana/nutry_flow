import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import 'package:nutry_flow/features/onboarding/presentation/screens/splash_screen.dart';
import 'package:nutry_flow/features/onboarding/presentation/screens/welcome_screen_redesigned.dart';
import 'package:nutry_flow/features/onboarding/presentation/screens/enhanced_registration_screen.dart';
import 'package:nutry_flow/features/onboarding/presentation/screens/enhanced_login_screen.dart';
import 'package:nutry_flow/features/onboarding/presentation/screens/profile_info_screen.dart';

import 'package:nutry_flow/features/onboarding/presentation/screens/forgot_password_screen.dart';
import 'package:nutry_flow/features/profile/presentation/screens/profile_settings_screen.dart';
import 'package:nutry_flow/features/analytics/presentation/screens/analytics_screen.dart';
import 'package:nutry_flow/features/analytics/presentation/screens/health_articles_screen.dart';
import 'package:nutry_flow/features/analytics/presentation/screens/developer_analytics_screen.dart';
import 'package:nutry_flow/features/analytics/presentation/screens/ab_testing_screen.dart';
import 'package:nutry_flow/screens/theme_demo_screen.dart';
import 'package:nutry_flow/app.dart';

/// –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∏ —Ä–æ—É—Ç–∏–Ω–≥–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
class AppRouter {
  bool _isInitialized = false;
  late final GoRouter _router;

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  bool get isInitialized => _isInitialized;

  /// –ü–æ–ª—É—á–µ–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —Ä–æ—É—Ç–µ—Ä–∞
  GoRouter get router => _router;

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞
  Future<void> initialize() async {
    if (_isInitialized) {
      print('‚ö†Ô∏è AppRouter: Already initialized');
      return;
    }

    try {
      print('üó∫Ô∏è AppRouter: Initializing router...');
      
      _router = GoRouter(
        initialLocation: '/',
        debugLogDiagnostics: true,
        routes: _buildRoutes(),
        errorBuilder: (context, state) => _buildErrorPage(context, state),
        redirect: _handleRedirect,
      );
      
      _isInitialized = true;
      print('‚úÖ AppRouter: Router initialized successfully');
      
    } catch (e, stackTrace) {
      print('‚ùå AppRouter: Initialization failed: $e');
      print('‚ùå Stack trace: $stackTrace');
      rethrow;
    }
  }

  /// –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–æ–≤
  List<RouteBase> _buildRoutes() {
    return [
      // –ì–ª–∞–≤–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç
      GoRoute(
        path: '/',
        name: 'splash',
        builder: (context, state) => const SplashScreen(),
      ),
      
      // Onboarding –º–∞—Ä—à—Ä—É—Ç—ã
      GoRoute(
        path: '/welcome',
        name: 'welcome',
        builder: (context, state) => Theme(
          data: ThemeData.light(),
          child: const WelcomeScreenRedesigned(),
        ),
      ),
      
      GoRoute(
        path: '/registration',
        name: 'registration',
        builder: (context, state) => Theme(
          data: ThemeData.light(),
          child: const EnhancedRegistrationScreen(),
        ),
      ),
      
      GoRoute(
        path: '/login',
        name: 'login',
        builder: (context, state) => Theme(
          data: ThemeData.light(),
          child: const EnhancedLoginScreen(),
        ),
      ),
      
      GoRoute(
        path: '/profile-info',
        name: 'profile-info',
        builder: (context, state) => Theme(
          data: ThemeData.light(),
          child: const ProfileInfoScreen(),
        ),
      ),
      
      GoRoute(
        path: '/goals-setup',
        name: 'goals-setup',
        builder: (context, state) => Theme(
          data: ThemeData.light(),
          child: const Scaffold(
            body: Center(
              child: Text('Goals Setup Screen - Placeholder'),
            ),
          ),
        ),
      ),
      
      GoRoute(
        path: '/forgot-password',
        name: 'forgot-password',
        builder: (context, state) => Theme(
          data: ThemeData.light(),
          child: const ForgotPasswordScreen(),
        ),
      ),
      
      // –û—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
      GoRoute(
        path: '/dashboard',
        name: 'dashboard',
        builder: (context, state) => const AppContainer(),
      ),
      
      GoRoute(
        path: '/app',
        name: 'app',
        builder: (context, state) => const AppContainer(),
      ),
      
      // Analytics –º–∞—Ä—à—Ä—É—Ç—ã
      GoRoute(
        path: '/analytics',
        name: 'analytics',
        builder: (context, state) => const Scaffold(
          body: AnalyticsScreen(),
        ),
      ),
      
      GoRoute(
        path: '/health-articles',
        name: 'health-articles',
        builder: (context, state) => const Scaffold(
          body: HealthArticlesScreen(),
        ),
      ),
      
      GoRoute(
        path: '/developer-analytics',
        name: 'developer-analytics',
        builder: (context, state) => const Scaffold(
          body: DeveloperAnalyticsScreen(),
        ),
      ),
      
      GoRoute(
        path: '/ab-testing',
        name: 'ab-testing',
        builder: (context, state) => const Scaffold(
          body: ABTestingScreen(),
        ),
      ),
      
      // Profile –º–∞—Ä—à—Ä—É—Ç—ã
      GoRoute(
        path: '/profile-settings',
        name: 'profile-settings',
        builder: (context, state) => const Scaffold(
          body: ProfileSettingsScreen(),
        ),
      ),
      
      // Theme demo –º–∞—Ä—à—Ä—É—Ç
      GoRoute(
        path: '/theme-demo',
        name: 'theme-demo',
        builder: (context, state) => const ThemeDemoScreen(),
      ),
    ];
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤
  String? _handleRedirect(BuildContext context, GoRouterState state) {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    // –∏ –¥—Ä—É–≥–∏—Ö —É—Å–ª–æ–≤–∏–π –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤
    
    final isAuthenticated = _checkAuthentication();
    final isOnboarding = _isOnboardingRoute(state.uri.path);
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –∏ –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ø–∞—Å—Ç—å –≤ –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
    if (!isAuthenticated && !isOnboarding) {
      return '/welcome';
    }
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –∏ –ø—ã—Ç–∞–µ—Ç—Å—è –ø–æ–ø–∞—Å—Ç—å –≤ onboarding
    if (isAuthenticated && isOnboarding) {
      return '/dashboard';
    }
    
    return null; // –ù–µ—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞
  }

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (–∑–∞–≥–ª—É—à–∫–∞)
  bool _checkAuthentication() {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    return false;
  }

  /// –ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –º–∞—Ä—à—Ä—É—Ç —á–∞—Å—Ç—å—é onboarding
  bool _isOnboardingRoute(String location) {
    final onboardingRoutes = [
      '/welcome', '/registration', '/login', '/profile-info', 
      '/goals-setup', '/forgot-password'
    ];
    return onboardingRoutes.contains(location);
  }

  /// –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—à–∏–±–∫–∏
  Widget _buildErrorPage(BuildContext context, GoRouterState state) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('–û—à–∏–±–∫–∞'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Icon(
              Icons.error_outline,
              size: 64,
              color: Colors.red,
            ),
            const SizedBox(height: 16),
            Text(
              '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞',
              style: Theme.of(context).textTheme.headlineSmall,
            ),
            const SizedBox(height: 8),
            Text(
              '–ú–∞—Ä—à—Ä—É—Ç: ${state.uri.path}',
              style: Theme.of(context).textTheme.bodyMedium,
            ),
            const SizedBox(height: 24),
            ElevatedButton(
              onPressed: () => context.go('/'),
              child: const Text('–ù–∞ –≥–ª–∞–≤–Ω—É—é'),
            ),
          ],
        ),
      ),
    );
  }

  /// –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —Ä–æ—É—Ç–µ—Ä–æ–º
  Widget createApp() {
    if (!_isInitialized) {
      throw StateError('AppRouter is not initialized. Call initialize() first.');
    }
    
    return MaterialApp.router(
      title: 'NutryFlow',
      routerConfig: _router,
      debugShowCheckedModeBanner: false,
    );
  }

  /// –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫ –º–∞—Ä—à—Ä—É—Ç—É
  void navigateTo(String route, {Object? extra}) {
    if (!_isInitialized) {
      print('‚ö†Ô∏è AppRouter: Router not initialized');
      return;
    }
    
    _router.push(route, extra: extra);
  }

  /// –ó–∞–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
  void replaceRoute(String route, {Object? extra}) {
    if (!_isInitialized) {
      print('‚ö†Ô∏è AppRouter: Router not initialized');
      return;
    }
    
    _router.replace(route, extra: extra);
  }

  /// –í–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥
  void goBack() {
    if (!_isInitialized) {
      print('‚ö†Ô∏è AppRouter: Router not initialized');
      return;
    }
    
    if (_router.canPop()) {
      _router.pop();
    }
  }

  /// –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
  Future<void> dispose() async {
    if (!_isInitialized) return;
    
    print('üßπ AppRouter: Disposing...');
    // GoRouter –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —è–≤–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏
    _isInitialized = false;
    print('‚úÖ AppRouter: Disposed successfully');
  }
}
