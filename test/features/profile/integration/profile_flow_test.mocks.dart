// Mocks generated by Mockito 5.4.6 from annotations
// in nutry_flow/test/features/profile/integration/profile_flow_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:nutry_flow/features/profile/domain/entities/user_profile.dart'
    as _i2;
import 'package:nutry_flow/features/profile/domain/repositories/profile_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserProfile_0 extends _i1.SmartFake implements _i2.UserProfile {
  _FakeUserProfile_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileRepository extends _i1.Mock implements _i3.ProfileRepository {
  MockProfileRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.UserProfile?> getCurrentUserProfile() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUserProfile,
          [],
        ),
        returnValue: _i4.Future<_i2.UserProfile?>.value(),
      ) as _i4.Future<_i2.UserProfile?>);

  @override
  _i4.Future<_i2.UserProfile?> getUserProfile(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserProfile,
          [userId],
        ),
        returnValue: _i4.Future<_i2.UserProfile?>.value(),
      ) as _i4.Future<_i2.UserProfile?>);

  @override
  _i4.Future<_i2.UserProfile> createUserProfile(_i2.UserProfile? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #createUserProfile,
          [profile],
        ),
        returnValue: _i4.Future<_i2.UserProfile>.value(_FakeUserProfile_0(
          this,
          Invocation.method(
            #createUserProfile,
            [profile],
          ),
        )),
      ) as _i4.Future<_i2.UserProfile>);

  @override
  _i4.Future<_i2.UserProfile> updateUserProfile(_i2.UserProfile? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [profile],
        ),
        returnValue: _i4.Future<_i2.UserProfile>.value(_FakeUserProfile_0(
          this,
          Invocation.method(
            #updateUserProfile,
            [profile],
          ),
        )),
      ) as _i4.Future<_i2.UserProfile>);

  @override
  _i4.Future<void> deleteUserProfile(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteUserProfile,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String> uploadAvatar(
    String? userId,
    String? imagePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadAvatar,
          [
            userId,
            imagePath,
          ],
        ),
        returnValue: _i4.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #uploadAvatar,
            [
              userId,
              imagePath,
            ],
          ),
        )),
      ) as _i4.Future<String>);

  @override
  _i4.Future<void> deleteAvatar(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteAvatar,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<bool> isEmailAvailable(
    String? email, {
    String? excludeUserId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #isEmailAvailable,
          [email],
          {#excludeUserId: excludeUserId},
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);

  @override
  _i4.Future<Map<String, dynamic>> getProfileStatistics(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProfileStatistics,
          [userId],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);

  @override
  _i4.Future<Map<String, dynamic>> exportProfileData(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #exportProfileData,
          [userId],
        ),
        returnValue:
            _i4.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i4.Future<Map<String, dynamic>>);
}
